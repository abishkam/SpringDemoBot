version: '3'

services:
  tgbd:
    image: tgbd
    build:
      context: .
    container_name: tgbd
    depends_on:
      - db
      - broker
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/usertg
      - spring.flyway.url=jdbc:postgresql://db:5432/usertg
      - spring.jpa.hibernate.ddl-auto=update
    ports:
      - 8000:8080

  tgservice:
    image: tgservice
    build:
      context: .
    container_name: tgservice
    depends_on:
      - broker
    ports:
      - 8010:8090

  db:
    image: 'postgres:latest'
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=usertg
    ports:
      - 5432:5432
    volumes:
      - ./data:/var/lib/postgresql/data
    restart: always

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

